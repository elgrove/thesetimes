[tool.poetry]
name = "thesetimes-service-web"
version = "0.1.0"
description = ""
authors = ["Aaron <aaron@aaron.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.9"
flask = "^2.2.3"
gunicorn = "^20.1.0"
sqlalchemy = "^1.4"
psycopg2-binary = "^2.9.5"
thesetimes-orm = { path = "../package-orm", develop = false}

[tool.poetry.dev-dependencies]
black = "^22.3.0"
darglint = "^1.8.1"
docformatter = "^1.7.2"
flake8 = "^5.0.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^23.0.0"
flake8-docstrings = "^1.6.0"
flake8-fixme = "^1.1.1"
flake8-print = "^5.0.0"
flake8-pyproject = "^1.2.3"
flake8-pytest-style = "^1.6.0"
isort = "^5.12.0"
pylint = "^2.15.4"
pytest = "^6.0.0"
xdoctest = "^1.1.0"


[tool.black]
target-version = ['py38']
line-length=88

[tool.isort]
py_version=38
profile = "black"
force_sort_within_sections = "True"
src_paths = ["core", "tests"]


[tool.flake8]
select = ['B','D','T','E','F','S','C']
# B = bugbear, checks for code smells
# D = flake8-docstrings, checks docstrings are present and correct
# T = flake8-print, checks for print statements
# E = pycodestyle error level (W = warning level, not used)
# F = pyflakes, checks for errors in code
# S = flake8-bandit, security
# C = flake8-mccabe, checks for overly complex code
ignore = ['D100','D104', 'D2', 'D415', 'E501', 'T101']
# D100 = missing docstring at top of module file
# D104 = missing docstring in package __init__.py
# D2 = whole class (D2**) of docstring formatting issues (handled by docformatter automatically)
# D415 = docstring first line must end with a full stop (not needed)
# E501 = line-too-long (handled by black/docformatter automatically)
per-file-ignores = ['tests/*:S,DAR101,D101,E101,D102']
# ignoring in the tests directory:
# S = all security checks carried out by flake8-bandit
# DAR101 = docstring missing parameter. no need to describe what monkeypatch is!
# D101 = missing docstring in public class. test classes do not need docstrings.
application-import-names = ['core']
docstring-convention = 'google'
strictness = 'long' # darglint docstring strictness
max-line-length = 88
max-complexity = 10

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "too-few-public-methods",
    "line-too-long",
    "invalid-name",
    "fixme",
]

[tool.pylint.format]
max-module-lines = 1000

[tool.pylint.options]
ignore = ["tests", "pyproject.toml"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
